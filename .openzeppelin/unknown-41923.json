{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x32eDd6f3453f4b1F7Ad9DC4CEAF3Cff861f1080F",
      "txHash": "0xd7e09745a5f8ac28c04d525f648dfe62d79e49039d48a0e76682d90c4ead21d9",
      "kind": "transparent"
    },
    {
      "address": "0xd35C85FbA82587c15D2fa255180146A046B67237",
      "txHash": "0x7cc8d2f040035714e97fea99314eeeae922806e0c253518bc9a2e47dc3efee76",
      "kind": "transparent"
    }
  ],
  "impls": {
    "f590e3e7eba02718a3b4319fa360dc8ef6beb3136a0b92c82b1edd0c48189e41": {
      "address": "0xC54cb92D1b4F4eAbB21c702A5BD670243112B556",
      "txHash": "0x28c5559e345c34ad5c34ff76e8bfe2ee01126c0021c002149b7b04f2c18e9857",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC20Storage)538_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(GainzERC20Storage)6009_storage": {
            "label": "struct Gainz.GainzERC20Storage",
            "members": [
              {
                "label": "epochs",
                "type": "t_struct(Storage)4682_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "lastTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "governance",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "entityFunds",
                "type": "t_struct(Value)6158_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "256"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Storage)4682_storage": {
            "label": "struct Epochs.Storage",
            "members": [
              {
                "label": "genesis",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "epochLength",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Value)6158_storage": {
            "label": "struct Entities.Value",
            "members": [
              {
                "label": "team",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "growth",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "staking",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "liqIncentive",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:gainz.GainzERC20.storage": [
            {
              "contract": "Gainz",
              "label": "epochs",
              "type": "t_struct(Storage)4682_storage",
              "src": "contracts/tokens/Gainz/Gainz.sol:31",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Gainz",
              "label": "lastTimestamp",
              "type": "t_uint256",
              "src": "contracts/tokens/Gainz/Gainz.sol:32",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "Gainz",
              "label": "governance",
              "type": "t_address",
              "src": "contracts/tokens/Gainz/Gainz.sol:33",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "Gainz",
              "label": "entityFunds",
              "type": "t_struct(Value)6158_storage",
              "src": "contracts/tokens/Gainz/Gainz.sol:34",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "fcf0c0d6d5dba6adca0010bcf7f0f0c2ed809a00a7c83d08898a6cc3155f696d": {
      "address": "0xC85a89B81bc65951f552A10a3DBc6ce2ad91087B",
      "txHash": "0x107511833b84e06fa96c84aa0370809dd5779bb1e58c533fcef35b8f02a2e3e6",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "_originalCaller",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "Router",
            "src": "contracts/Router.sol:341"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(User)4137_storage)": {
            "label": "mapping(address => struct User)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RouterStorage)3482_storage": {
            "label": "struct Router.RouterStorage",
            "members": [
              {
                "label": "feeTo",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "feeToSetter",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "wNativeToken",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "proxyAdmin",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "pairsBeacon",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "governance",
                "type": "t_address",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "epochs",
                "type": "t_struct(Storage)4682_storage",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "256"
          },
          "t_struct(Storage)4682_storage": {
            "label": "struct Epochs.Storage",
            "members": [
              {
                "label": "genesis",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "epochLength",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(SwapFactoryStorage)4069_storage": {
            "label": "struct SwapFactory.SwapFactoryStorage",
            "members": [
              {
                "label": "pairMap",
                "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "pairs",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(User)4137_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "id",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "addr",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "referrerId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "referrals",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(UserStorage)4196_storage": {
            "label": "struct UserModule.UserStorage",
            "members": [
              {
                "label": "userCount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "users",
                "type": "t_mapping(t_address,t_struct(User)4137_storage)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "userIdToAddress",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:gainz.Router.storage": [
            {
              "contract": "Router",
              "label": "feeTo",
              "type": "t_address",
              "src": "contracts/Router.sol:226",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Router",
              "label": "feeToSetter",
              "type": "t_address",
              "src": "contracts/Router.sol:227",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "Router",
              "label": "wNativeToken",
              "type": "t_address",
              "src": "contracts/Router.sol:229",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "Router",
              "label": "proxyAdmin",
              "type": "t_address",
              "src": "contracts/Router.sol:230",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "Router",
              "label": "pairsBeacon",
              "type": "t_address",
              "src": "contracts/Router.sol:231",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "Router",
              "label": "governance",
              "type": "t_address",
              "src": "contracts/Router.sol:232",
              "offset": 0,
              "slot": "5"
            },
            {
              "contract": "Router",
              "label": "epochs",
              "type": "t_struct(Storage)4682_storage",
              "src": "contracts/Router.sol:233",
              "offset": 0,
              "slot": "6"
            }
          ],
          "erc7201:userModule.storage": [
            {
              "contract": "UserModule",
              "label": "userCount",
              "type": "t_uint256",
              "src": "contracts/abstracts/UserModule.sol:102",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "UserModule",
              "label": "users",
              "type": "t_mapping(t_address,t_struct(User)4137_storage)",
              "src": "contracts/abstracts/UserModule.sol:103",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "UserModule",
              "label": "userIdToAddress",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "contracts/abstracts/UserModule.sol:104",
              "offset": 0,
              "slot": "2"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ],
          "erc7201:gainz.SwapFactory.storage": [
            {
              "contract": "SwapFactory",
              "label": "pairMap",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "src": "contracts/abstracts/SwapFactory.sol:14",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "SwapFactory",
              "label": "pairs",
              "type": "t_array(t_address)dyn_storage",
              "src": "contracts/abstracts/SwapFactory.sol:15",
              "offset": 0,
              "slot": "1"
            }
          ]
        }
      }
    }
  }
}
